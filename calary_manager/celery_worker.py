from celery import Celery
import subprocess

celery_app = Celery("tasks")
celery_app.config_from_object("celeryconfig")

@celery_app.task(bind=True)
def run_external_project(self):
    project_path = "/home/maksud/–î–æ–∫—É–º–µ–Ω—Ç—ã/ls_ml_beckend_detection/detection"
    print(f"üìÅ –ó–∞–ø—É—Å–∫–∞—é –∏–∑: {project_path}")

    try:
        result = subprocess.run(
            ["python", "main.py", "stream"],
            cwd=project_path,
            capture_output=True,
            text=True,
            check=True
        )
        print("‚úÖ –ó–∞–ø—É—â–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ:\n", result.stdout)
        if result.stderr:
            print("‚ö†Ô∏è stderr:\n", result.stderr)
    except subprocess.CalledProcessError as e:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ:\n", e.stderr)
    except Exception as e:
        print("üî• –û–±—â–∞—è –æ—à–∏–±–∫–∞:", str(e))
